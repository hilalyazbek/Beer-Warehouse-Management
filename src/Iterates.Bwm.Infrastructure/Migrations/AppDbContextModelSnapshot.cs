// <auto-generated />
using System;
using Iterates.Bwm.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iterates.Bwm.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Beer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlcoholContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BrewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrewerId");

                    b.ToTable("Beers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3fa75d9-82bb-44c8-8ff5-7e3e0ff7f767"),
                            AlcoholContent = "6,6%",
                            BrewerId = new Guid("bab4cfe6-e3e9-48c6-9230-8f232a25eda0"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9360),
                            Name = " Leffe Blonde",
                            Price = 2.20m,
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9360)
                        });
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Brewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brewers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bab4cfe6-e3e9-48c6-9230-8f232a25eda0"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9210),
                            Name = "Abbaye de Leffe",
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9240)
                        },
                        new
                        {
                            Id = new Guid("8c641b60-6d70-4fb3-94f0-e8f6c23e8535"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9270),
                            Name = "Brasserie de la Senne",
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9270)
                        });
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Wholesaler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Wholesalers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1847dd70-7b84-4fd7-a611-0e46dbfe0f67"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9400),
                            Name = "GeneDrinks",
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9400)
                        },
                        new
                        {
                            Id = new Guid("4a413b7b-3b8e-457f-b7af-4944b7dd8cda"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9410),
                            Name = "OneShot",
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9410)
                        });
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.WholesalerStock", b =>
                {
                    b.Property<Guid>("WholesalerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("WholesalerId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("WholesalerStocks");

                    b.HasData(
                        new
                        {
                            WholesalerId = new Guid("1847dd70-7b84-4fd7-a611-0e46dbfe0f67"),
                            BeerId = new Guid("e3fa75d9-82bb-44c8-8ff5-7e3e0ff7f767"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9440),
                            Id = new Guid("08c36db5-2a3b-4ba6-8860-a9c76338d7fc"),
                            Stock = 100,
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9440)
                        },
                        new
                        {
                            WholesalerId = new Guid("4a413b7b-3b8e-457f-b7af-4944b7dd8cda"),
                            BeerId = new Guid("e3fa75d9-82bb-44c8-8ff5-7e3e0ff7f767"),
                            Created = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9450),
                            Id = new Guid("80451a52-5e53-41ba-a922-955fd2c2298a"),
                            Stock = 500,
                            Updated = new DateTime(2023, 3, 12, 21, 52, 40, 173, DateTimeKind.Local).AddTicks(9450)
                        });
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Beer", b =>
                {
                    b.HasOne("Iterates.Bwm.Domain.Entities.Brewer", null)
                        .WithMany("Beers")
                        .HasForeignKey("BrewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.WholesalerStock", b =>
                {
                    b.HasOne("Iterates.Bwm.Domain.Entities.Beer", "Beer")
                        .WithMany("WholesalerStocks")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iterates.Bwm.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("WholesalerStocks")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Beer", b =>
                {
                    b.Navigation("WholesalerStocks");
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Brewer", b =>
                {
                    b.Navigation("Beers");
                });

            modelBuilder.Entity("Iterates.Bwm.Domain.Entities.Wholesaler", b =>
                {
                    b.Navigation("WholesalerStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
